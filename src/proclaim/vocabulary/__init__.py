from pathlib import Path
from proclaim.mkdocs_generator import MkDocsGenerator
from importlib.resources import files
from linkml_runtime import SchemaView

class VocabularyHtmlGenerator(MkDocsGenerator):
    """
    The pages generated by this generator are not part of the profile exactly.
    Rather, they act as a description of each class and property in the schema, independent of the profile.
    The intention is that the IRIs of the classes and properties should resolve to these pages, which can be used in other RDF scenarios that don't even necessarily relate to RO-Crate.
    """
    def make_markdown(self, markdown_dir: Path, sv: SchemaView) -> None:
        package_files = files("proclaim.vocabulary")
        (markdown_dir / "index.md").touch()

        properties = markdown_dir / "properties"
        properties.mkdir()
        for sname, slot in sv.all_slots(imports=False).items():
            self.write_markdown((properties / sname).with_suffix(".md"), package_files / "property.jinja2", slot=slot, sname=sname)

        classes = markdown_dir / "classes"
        classes.mkdir()
        for cname, cls in sv.all_classes(imports=False).items():
            self.write_markdown((classes / cname).with_suffix(".md"), package_files / "class.jinja2", cls=cls, cname=cname)
